values:
  imagePullSecrets:
    allowNone: true
  central:
    db:
      existingSecret:
        name: existing-central-db-password
        key: password
  scanner:
    db:
      existingSecret: 
        name: existing-scanner-db-password
        key: password
tests:
  - name: "Should mount existing db secret to deployments"
    expect: |
      .deployments.central | .spec.template.spec.containers[0].volumeMounts | map(select(.name == "existing-central-db-password")) | assertThat(. != null)
      .deployments.central | .spec.template.spec.volumes | map(select(.name == "existing-central-db-password")) | assertThat(. != null)
      .deployments.scanner | .spec.template.spec.containers[0].volumeMounts | map(select(.name == "existing-scanner-db-password")) | assertThat(. != null)
      .deployments.scanner | .spec.template.spec.volumes | map(select(.name == "existing-scanner-db-password")) | assertThat(. != null)
  - name: "Should mount existing db secret to db deployments"
    expect: |
      .deployments["central-db"] | .spec.template.spec.initContainers[0].volumeMounts | map(select(.name == "existing-central-db-password" )) | assertThat(. != null)
      .deployments["central-db"] | .spec.template.spec.volumes | map(select(.name == "existing-central-db-password" )) | assertThat(. != null)
      .deployments["scanner-db"] | .spec.template.spec.initContainers[0].volumeMounts | map(select(.name == "existing-scanner-db-password" )) | assertThat(. != null)
      .deployments["scanner-db"] | .spec.template.spec.volumes | map(select(.name == "existing-scannner-db-password" )) | assertThat(. != null)
  - name: "Should not create database secrets"
    expect: |
        .objects | map(select(.kind == "Secret" and .metadata.name == "central-db-password")) | assertThat(length == 0)
        .objects | map(select(.kind == "Secret" and .metadata.name == "scanner-db-password")) | assertThat(length == 0)

